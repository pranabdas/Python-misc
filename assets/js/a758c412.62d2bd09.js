"use strict";(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([[3908],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return f}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),i=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=i(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=i(t),m=l,f=u["".concat(p,".").concat(m)]||u[m]||c[m]||r;return t?a.createElement(f,s(s({ref:n},d),{},{components:t})):a.createElement(f,s({ref:n},d))}));function f(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,s=new Array(r);s[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[u]="string"==typeof e?e:l,s[1]=o;for(var i=2;i<r;i++)s[i]=t[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5652:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return u}});var a=t(7462),l=t(3366),r=(t(7294),t(3905)),s=["components"],o={title:"Pandas"},p=void 0,i={unversionedId:"pandas",id:"pandas",title:"Pandas",description:"pandas module helps us to work with tabular data. It is more like a",source:"@site/docs/pandas.md",sourceDirName:".",slug:"/pandas",permalink:"/python-tutorial/pandas",draft:!1,editUrl:"https://github.com/pranabdas/python-tutorial/blob/main/docs/pandas.md",tags:[],version:"current",frontMatter:{title:"Pandas"},sidebar:"docs",previous:{title:"Convolution",permalink:"/python-tutorial/scipy/convolution"},next:{title:"Multiprocessing",permalink:"/python-tutorial/multiprocessing"}},d={},u=[{value:"Installation",id:"installation",level:2},{value:"Dataframe",id:"dataframe",level:2},{value:"Excel and CSV",id:"excel-and-csv",level:2},{value:"Datatype",id:"datatype",level:2},{value:"Text manipulation",id:"text-manipulation",level:2},{value:"Customizing pandas",id:"customizing-pandas",level:2},{value:"Notebooks",id:"notebooks",level:2}],c={toc:u},m="wrapper";function f(e){var n=e.components,t=(0,l.Z)(e,s);return(0,r.kt)(m,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pandas")," module helps us to work with tabular data. It is more like a\nspreadsheet program. We can perform various data manipulation, cleaning, and\neven visualization using ",(0,r.kt)("strong",{parentName:"p"},"pandas"),"."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install pandas package:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install pandas\n\n# for Microsoft Excel compatibility\npip install xlrd openpyxl\n\n# for handling missing data\npip install missingno\n")),(0,r.kt)("h2",{id:"dataframe"},"Dataframe"),(0,r.kt)("p",null,"Dataframe is like a variable that can hold a whole table. It is more than a\nvariable, it is a python object. It has properties and methods. Let us create\nsome tabular data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\n\n# Create a python dictionary\ndata = {'Names':  ['Student 1', 'Student 2', 'Student 3'],\n        'Age': [14, 15, 15],\n        'Height': [150, 145, 152]\n        }\n\n# dataframe form a dictionary\ndf = pd.DataFrame(data)\n")),(0,r.kt)("p",null,"We can visualize the table in Jupyter notebook:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df  # this shows rich view\n\n# alternatively print plaintext tables\nprint(df)\n\n       Names  Age  Height\n0  Student 1   14     150\n1  Student 2   15     145\n2  Student 3   15     152\n")),(0,r.kt)("p",null,"Each column in a dataframe is a pandas series. We can select columns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df["Height"]\n\n0    150\n1    145\n2    152\nName: Height, dtype: int64\n')),(0,r.kt)("p",null,"Find the shape of the dataframe:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.shape\n\n(3, 3)\n")),(0,r.kt)("p",null,"Let us append a new row of data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df = df.append({'Names' : 'Student 4', \\\n                'Age' : 16, \\\n                'Height' : 155}, \\\n                ignore_index=True)\nprint(df)\n\n       Names  Age  Height\n0  Student 1   14     150\n1  Student 2   15     145\n2  Student 3   15     152\n3  Student 4   16     155\n")),(0,r.kt)("p",null,"Here ",(0,r.kt)("inlineCode",{parentName:"p"},"shape")," is a property of the dataframe, while ",(0,r.kt)("inlineCode",{parentName:"p"},"append")," is a method.\nGeneral convention is: ",(0,r.kt)("inlineCode",{parentName:"p"},"object.prop")," to get a property value and\n",(0,r.kt)("inlineCode",{parentName:"p"},"object.function()")," to perform some operation."),(0,r.kt)("p",null,"Assign a new column:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# add new column\ngrades = ["A", "B", "C", "B"]\ndf[\'grades\'] = grades\nprint(df)\n\n       Names  Age  Height grades\n0  Student 1   14     150      A\n1  Student 2   15     145      B\n2  Student 3   15     152      C\n3  Student 4   16     155      B\n')),(0,r.kt)("p",null,"Insert column in a specific location:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.pop('grades')  # remove last column\ndf.insert(1, 'Grades', grades)\nprint(df)\n\n       Names Grades  Age  Height\n0  Student 1      A   14     150\n1  Student 2      B   15     145\n2  Student 3      C   15     152\n3  Student 4      B   16     155\n")),(0,r.kt)("p",null,"Edit row:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.loc[1] = ['Student 2', 'A', 15, 147]\nprint(df)\n\n       Names Grades  Age  Height\n0  Student 1      A   14     150\n1  Student 2      A   15     147\n2  Student 3      C   15     152\n3  Student 4      B   16     155\n")),(0,r.kt)("p",null,"Delete a row:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.drop(df.index[[2]], inplace=True)\n\n# Drop last row\n# df.drop(df.index[[-1]], inplace=True)\n\nprint(df)\n\n       Names Grades  Age  Height\n0  Student 1      A   14     150\n1  Student 2      A   15     147\n3  Student 4      B   16     155\n")),(0,r.kt)("p",null,"Sort by column:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df.sort_values(by="Age", ascending=False)\n\n    Names   Grades  Age Height\n3   Student 4   B   16  155\n1   Student 2   A   15  147\n0   Student 1   A   14  150\n')),(0,r.kt)("p",null,"Select columns based on values:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df[df["Height"] >= 150]\n\n    Names   Grades  Age Height\n0   Student 1   A   14  150\n3   Student 4   B   16  155\n')),(0,r.kt)("h2",{id:"excel-and-csv"},"Excel and CSV"),(0,r.kt)("p",null,"Save to ",(0,r.kt)("inlineCode",{parentName:"p"},".csv")," or ",(0,r.kt)("inlineCode",{parentName:"p"},".xlsx")," format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Save as both excel and csv\ndf.to_csv('student_info.csv', index=False)\ndf.to_excel('student_info.xlsx', index=False)\n")),(0,r.kt)("p",null,"Read ",(0,r.kt)("inlineCode",{parentName:"p"},".csv")," or ",(0,r.kt)("inlineCode",{parentName:"p"},".xlsx")," files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df_copy_csv = pd.read_csv('student_info.csv')\ndf_copy_xlsx = pd.read_excel('student_info.xlsx')\n")),(0,r.kt)("p",null,"Now let us try to load a larger dataset to explore:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'url = "https://pranabdas.github.io/drive/datasets/iris/iris.csv"\nnames = ["sepal_len", "sepal_width", "petal_len", "petal_width", "species"]\ndf = pd.read_csv(url, header=None, names=names)\n')),(0,r.kt)("p",null,"First, let us check the size of the dataframe:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.shape\n\n(150, 5)\n")),(0,r.kt)("p",null,"We have 150 rows and 5 columns of data. We can see the top of the dataset by:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.head()\n\nsepal_len   sepal_width petal_len   petal_width species\n0   5.1 3.5 1.4 0.2 Iris-setosa\n1   4.9 3.0 1.4 0.2 Iris-setosa\n2   4.7 3.2 1.3 0.2 Iris-setosa\n3   4.6 3.1 1.5 0.2 Iris-setosa\n4   5.0 3.6 1.4 0.2 Iris-setosa\n")),(0,r.kt)("p",null,"By default this shows first 5 rows, we can see any number of rows by:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.head(10)\n")),(0,r.kt)("p",null,"Similarly, we can see the tail of the dataframe as well:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.tail()\n\nsepal_len   sepal_width petal_len   petal_width species\n145 6.7 3.0 5.2 2.3 Iris-virginica\n146 6.3 2.5 5.0 1.9 Iris-virginica\n147 6.5 3.0 5.2 2.0 Iris-virginica\n148 6.2 3.4 5.4 2.3 Iris-virginica\n149 5.9 3.0 5.1 1.8 Iris-virginica\n")),(0,r.kt)("p",null,"We can also see any arbitrary rows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.loc[15:20]\n\nsepal_len   sepal_width petal_len   petal_width species\n15  5.7 4.4 1.5 0.4 Iris-setosa\n16  5.4 3.9 1.3 0.4 Iris-setosa\n17  5.1 3.5 1.4 0.3 Iris-setosa\n18  5.7 3.8 1.7 0.3 Iris-setosa\n19  5.1 3.8 1.5 0.3 Iris-setosa\n20  5.4 3.4 1.7 0.2 Iris-setosa\n")),(0,r.kt)("p",null,"We can also select specific rows and columns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df.loc[15:20, "sepal_len"]\n\n15    5.7\n16    5.4\n17    5.1\n18    5.7\n19    5.1\n20    5.4\nName: sepal_len, dtype: float64\n')),(0,r.kt)("p",null,"Instead of column header names, its index can be used:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.iloc[15:20, 0:2]\n\n\nsepal_len   sepal_width\n15  5.7 4.4\n16  5.4 3.9\n17  5.1 3.5\n18  5.7 3.8\n19  5.1 3.8\n")),(0,r.kt)("p",null,"Notice that for indexing ",(0,r.kt)("inlineCode",{parentName:"p"},"loc")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"iloc")," behaves differently."),(0,r.kt)("h2",{id:"datatype"},"Datatype"),(0,r.kt)("p",null,"Checking the data types. While importing, pandas might not correctly set the\ndatatype for your data. You can check the datatype by:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df.dtypes\n\nsepal_len      float64\nsepal_width    float64\npetal_len      float64\npetal_width    float64\nspecies         object\ndtype: object\n")),(0,r.kt)("p",null,"We can change a datatype of a column using ",(0,r.kt)("inlineCode",{parentName:"p"},"astype"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df["sepal_len"] = df["sepal_len"].astype(int)\ndf.dtypes\n\nsepal_len        int64\nsepal_width    float64\npetal_len      float64\npetal_width    float64\nspecies         object\ndtype: object\n')),(0,r.kt)("h2",{id:"text-manipulation"},"Text manipulation"),(0,r.kt)("p",null,'Say, I want to remove the "Iris-" prefix from the species names:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df["species"] = df["species"].str.replace("Iris-", "")\n')),(0,r.kt)("p",null,"Remove leading or trailing spaces:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df["species"] = df["species"].str.strip()\n')),(0,r.kt)("p",null,"Say, I want to make the names uppercase or lowercase or title formatted:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df["species"] = df["species"].str.title()\n# df["species"] = df["species"].str.upper()\n# df["species"] = df["species"].str.lower()\ndf.head()\n\n\nsepal_len   sepal_width petal_len   petal_width species\n0   5.1 3.5 1.4 0.2 Setosa\n1   4.9 3.0 1.4 0.2 Setosa\n2   4.7 3.2 1.3 0.2 Setosa\n3   4.6 3.1 1.5 0.2 Setosa\n4   5.0 3.6 1.4 0.2 Setosa\n')),(0,r.kt)("p",null,"We create a new pandas series to make some more data manipulation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"names = pd.Series(['Albert Einstein', 'Richard Feynman', 'Issac Newton'])\n")),(0,r.kt)("p",null,"We want to reorder the first and last names:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"names = names.str.split(\" \")\nnames = pd.Series([i[::-1] for i in names])\nnames = [\" \".join(i) for i in names]\nprint(names)\n\n['Einstein Albert', 'Feynman Richard', 'Newton Issac']\n")),(0,r.kt)("h2",{id:"customizing-pandas"},"Customizing pandas"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pd.set_options('max_rows', 5)\npd.set_options('max_columns', 4)\n")),(0,r.kt)("h2",{id:"notebooks"},"Notebooks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/pranabdas/python-tutorial/blob/master/notebooks/pandas-dataframe.ipynb"},"Pandas dataframe")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/pranabdas/python-tutorial/blob/master/notebooks/pandas-csv-excel.ipynb"},"Working with CSV and Excel file format"))),(0,r.kt)("p",null,"If you have issues with viewing the notebooks in web browser, please clone or\ndownload the repository and open the notebooks in Jupyter notebook."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you are interested in advanced use of pandas, please check out my\n",(0,r.kt)("a",{parentName:"p",href:"https://pranabdas.github.io/machine-learning/"},"machine learning")," tutorial and\nnotebooks.")))}f.isMDXComponent=!0}}]);