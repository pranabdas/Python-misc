"use strict";(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([[4700],{472:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var a=t(4848),s=t(8453);const i={title:"Pandas"},d=void 0,l={id:"pandas",title:"Pandas",description:"pandas module helps us to work with tabular data. It is more like a",source:"@site/docs/pandas.md",sourceDirName:".",slug:"/pandas",permalink:"/python-tutorial/pandas",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/python-tutorial/blob/main/docs/pandas.md",tags:[],version:"current",frontMatter:{title:"Pandas"},sidebar:"docs",previous:{title:"Convolution",permalink:"/python-tutorial/scipy/convolution"},next:{title:"Multiprocessing",permalink:"/python-tutorial/multiprocessing"}},r={},o=[{value:"Installation",id:"installation",level:2},{value:"Dataframe",id:"dataframe",level:2},{value:"Excel and CSV",id:"excel-and-csv",level:2},{value:"Datatype",id:"datatype",level:2},{value:"Text manipulation",id:"text-manipulation",level:2},{value:"Customizing pandas",id:"customizing-pandas",level:2},{value:"Notebooks",id:"notebooks",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"pandas"})," module helps us to work with tabular data. It is more like a\nspreadsheet program. We can perform various data manipulation, cleaning, and\neven visualization using ",(0,a.jsx)(n.strong,{children:"pandas"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.p,{children:"Install pandas package:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install pandas\n\n# for Microsoft Excel compatibility\npip install xlrd openpyxl\n\n# for handling missing data\npip install missingno\n"})}),"\n",(0,a.jsx)(n.h2,{id:"dataframe",children:"Dataframe"}),"\n",(0,a.jsx)(n.p,{children:"Dataframe is like a variable that can hold a whole table. It is more than a\nvariable, it is a python object. It has properties and methods. Let us create\nsome tabular data:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import pandas as pd\n\n# Create a python dictionary\ndata = {'Names':  ['Student 1', 'Student 2', 'Student 3'],\n        'Age': [14, 15, 15],\n        'Height': [150, 145, 152]\n        }\n\n# dataframe form a dictionary\ndf = pd.DataFrame(data)\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can visualize the table in Jupyter notebook:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df  # this shows rich view\n\n# alternatively print plaintext tables\nprint(df)\n\n       Names  Age  Height\n0  Student 1   14     150\n1  Student 2   15     145\n2  Student 3   15     152\n"})}),"\n",(0,a.jsx)(n.p,{children:"Each column in a dataframe is a pandas series. We can select columns:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'df["Height"]\n\n0    150\n1    145\n2    152\nName: Height, dtype: int64\n'})}),"\n",(0,a.jsx)(n.p,{children:"Find the shape of the dataframe:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.shape\n\n(3, 3)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Let us append a new row of data:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df = df.append({'Names' : 'Student 4', \\\n                'Age' : 16, \\\n                'Height' : 155}, \\\n                ignore_index=True)\nprint(df)\n\n       Names  Age  Height\n0  Student 1   14     150\n1  Student 2   15     145\n2  Student 3   15     152\n3  Student 4   16     155\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Here ",(0,a.jsx)(n.code,{children:"shape"})," is a property of the dataframe, while ",(0,a.jsx)(n.code,{children:"append"})," is a method.\nGeneral convention is: ",(0,a.jsx)(n.code,{children:"object.prop"})," to get a property value and\n",(0,a.jsx)(n.code,{children:"object.function()"})," to perform some operation."]}),"\n",(0,a.jsx)(n.p,{children:"Assign a new column:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# add new column\ngrades = ["A", "B", "C", "B"]\ndf[\'grades\'] = grades\nprint(df)\n\n       Names  Age  Height grades\n0  Student 1   14     150      A\n1  Student 2   15     145      B\n2  Student 3   15     152      C\n3  Student 4   16     155      B\n'})}),"\n",(0,a.jsx)(n.p,{children:"Insert column in a specific location:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.pop('grades')  # remove last column\ndf.insert(1, 'Grades', grades)\nprint(df)\n\n       Names Grades  Age  Height\n0  Student 1      A   14     150\n1  Student 2      B   15     145\n2  Student 3      C   15     152\n3  Student 4      B   16     155\n"})}),"\n",(0,a.jsx)(n.p,{children:"Edit row:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.loc[1] = ['Student 2', 'A', 15, 147]\nprint(df)\n\n       Names Grades  Age  Height\n0  Student 1      A   14     150\n1  Student 2      A   15     147\n2  Student 3      C   15     152\n3  Student 4      B   16     155\n"})}),"\n",(0,a.jsx)(n.p,{children:"Delete a row:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.drop(df.index[[2]], inplace=True)\n\n# Drop last row\n# df.drop(df.index[[-1]], inplace=True)\n\nprint(df)\n\n       Names Grades  Age  Height\n0  Student 1      A   14     150\n1  Student 2      A   15     147\n3  Student 4      B   16     155\n"})}),"\n",(0,a.jsx)(n.p,{children:"Sort by column:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'df.sort_values(by="Age", ascending=False)\n\n\tNames\tGrades\tAge\tHeight\n3\tStudent 4\tB\t16\t155\n1\tStudent 2\tA\t15\t147\n0\tStudent 1\tA\t14\t150\n'})}),"\n",(0,a.jsx)(n.p,{children:"Select columns based on values:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'df[df["Height"] >= 150]\n\n\tNames\tGrades\tAge\tHeight\n0\tStudent 1\tA\t14\t150\n3\tStudent 4\tB\t16\t155\n'})}),"\n",(0,a.jsx)(n.h2,{id:"excel-and-csv",children:"Excel and CSV"}),"\n",(0,a.jsxs)(n.p,{children:["Save to ",(0,a.jsx)(n.code,{children:".csv"})," or ",(0,a.jsx)(n.code,{children:".xlsx"})," format:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Save as both excel and csv\ndf.to_csv('student_info.csv', index=False)\ndf.to_excel('student_info.xlsx', index=False)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Read ",(0,a.jsx)(n.code,{children:".csv"})," or ",(0,a.jsx)(n.code,{children:".xlsx"})," files:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df_copy_csv = pd.read_csv('student_info.csv')\ndf_copy_xlsx = pd.read_excel('student_info.xlsx')\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now let us try to load a larger dataset to explore:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'url = "https://pranabdas.github.io/drive/datasets/iris/iris.csv"\nnames = ["sepal_len", "sepal_width", "petal_len", "petal_width", "species"]\ndf = pd.read_csv(url, header=None, names=names)\n'})}),"\n",(0,a.jsx)(n.p,{children:"First, let us check the size of the dataframe:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.shape\n\n(150, 5)\n"})}),"\n",(0,a.jsx)(n.p,{children:"We have 150 rows and 5 columns of data. We can see the top of the dataset by:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.head()\n\nsepal_len\tsepal_width\tpetal_len\tpetal_width\tspecies\n0\t5.1\t3.5\t1.4\t0.2\tIris-setosa\n1\t4.9\t3.0\t1.4\t0.2\tIris-setosa\n2\t4.7\t3.2\t1.3\t0.2\tIris-setosa\n3\t4.6\t3.1\t1.5\t0.2\tIris-setosa\n4\t5.0\t3.6\t1.4\t0.2\tIris-setosa\n"})}),"\n",(0,a.jsx)(n.p,{children:"By default this shows first 5 rows, we can see any number of rows by:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.head(10)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Similarly, we can see the tail of the dataframe as well:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.tail()\n\nsepal_len\tsepal_width\tpetal_len\tpetal_width\tspecies\n145\t6.7\t3.0\t5.2\t2.3\tIris-virginica\n146\t6.3\t2.5\t5.0\t1.9\tIris-virginica\n147\t6.5\t3.0\t5.2\t2.0\tIris-virginica\n148\t6.2\t3.4\t5.4\t2.3\tIris-virginica\n149\t5.9\t3.0\t5.1\t1.8\tIris-virginica\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can also see any arbitrary rows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.loc[15:20]\n\nsepal_len\tsepal_width\tpetal_len\tpetal_width\tspecies\n15\t5.7\t4.4\t1.5\t0.4\tIris-setosa\n16\t5.4\t3.9\t1.3\t0.4\tIris-setosa\n17\t5.1\t3.5\t1.4\t0.3\tIris-setosa\n18\t5.7\t3.8\t1.7\t0.3\tIris-setosa\n19\t5.1\t3.8\t1.5\t0.3\tIris-setosa\n20\t5.4\t3.4\t1.7\t0.2\tIris-setosa\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can also select specific rows and columns:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'df.loc[15:20, "sepal_len"]\n\n15    5.7\n16    5.4\n17    5.1\n18    5.7\n19    5.1\n20    5.4\nName: sepal_len, dtype: float64\n'})}),"\n",(0,a.jsx)(n.p,{children:"Instead of column header names, its index can be used:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.iloc[15:20, 0:2]\n\n\nsepal_len\tsepal_width\n15\t5.7\t4.4\n16\t5.4\t3.9\n17\t5.1\t3.5\n18\t5.7\t3.8\n19\t5.1\t3.8\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Notice that for indexing ",(0,a.jsx)(n.code,{children:"loc"})," and ",(0,a.jsx)(n.code,{children:"iloc"})," behaves differently."]}),"\n",(0,a.jsx)(n.h2,{id:"datatype",children:"Datatype"}),"\n",(0,a.jsx)(n.p,{children:"Checking the data types. While importing, pandas might not correctly set the\ndatatype for your data. You can check the datatype by:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.dtypes\n\nsepal_len      float64\nsepal_width    float64\npetal_len      float64\npetal_width    float64\nspecies         object\ndtype: object\n"})}),"\n",(0,a.jsxs)(n.p,{children:["We can change a datatype of a column using ",(0,a.jsx)(n.code,{children:"astype"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'df["sepal_len"] = df["sepal_len"].astype(int)\ndf.dtypes\n\nsepal_len        int64\nsepal_width    float64\npetal_len      float64\npetal_width    float64\nspecies         object\ndtype: object\n'})}),"\n",(0,a.jsx)(n.h2,{id:"text-manipulation",children:"Text manipulation"}),"\n",(0,a.jsx)(n.p,{children:'Say, I want to remove the "Iris-" prefix from the species names:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'df["species"] = df["species"].str.replace("Iris-", "")\n'})}),"\n",(0,a.jsx)(n.p,{children:"Remove leading or trailing spaces:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'df["species"] = df["species"].str.strip()\n'})}),"\n",(0,a.jsx)(n.p,{children:"Say, I want to make the names uppercase or lowercase or title formatted:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'df["species"] = df["species"].str.title()\n# df["species"] = df["species"].str.upper()\n# df["species"] = df["species"].str.lower()\ndf.head()\n\n\nsepal_len\tsepal_width\tpetal_len\tpetal_width\tspecies\n0\t5.1\t3.5\t1.4\t0.2\tSetosa\n1\t4.9\t3.0\t1.4\t0.2\tSetosa\n2\t4.7\t3.2\t1.3\t0.2\tSetosa\n3\t4.6\t3.1\t1.5\t0.2\tSetosa\n4\t5.0\t3.6\t1.4\t0.2\tSetosa\n'})}),"\n",(0,a.jsx)(n.p,{children:"We create a new pandas series to make some more data manipulation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"names = pd.Series(['Albert Einstein', 'Richard Feynman', 'Issac Newton'])\n"})}),"\n",(0,a.jsx)(n.p,{children:"We want to reorder the first and last names:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"names = names.str.split(\" \")\nnames = pd.Series([i[::-1] for i in names])\nnames = [\" \".join(i) for i in names]\nprint(names)\n\n['Einstein Albert', 'Feynman Richard', 'Newton Issac']\n"})}),"\n",(0,a.jsx)(n.h2,{id:"customizing-pandas",children:"Customizing pandas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"pd.set_options('max_rows', 5)\npd.set_options('max_columns', 4)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"notebooks",children:"Notebooks"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/pranabdas/python-tutorial/blob/master/notebooks/pandas-dataframe.ipynb",children:"Pandas dataframe"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/pranabdas/python-tutorial/blob/master/notebooks/pandas-csv-excel.ipynb",children:"Working with CSV and Excel file format"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"If you have issues with viewing the notebooks in web browser, please clone or\ndownload the repository and open the notebooks in Jupyter notebook."}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["If you are interested in advanced use of pandas, please check out my\n",(0,a.jsx)(n.a,{href:"https://pranabdas.github.io/machine-learning/",children:"machine learning"})," tutorial and\nnotebooks."]})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var a=t(6540);const s={},i=a.createContext(s);function d(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);