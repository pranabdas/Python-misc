"use strict";(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([[4949],{3905:function(e,a,t){t.d(a,{Zo:function(){return y},kt:function(){return d}});var n=t(7294);function u(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){u(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,n,u=function(e,a){if(null==e)return{};var t,n,u={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(u[t]=e[t]);return u}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(u[t]=e[t])}return u}var m=n.createContext({}),o=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},y=function(e){var a=o(e.components);return n.createElement(m.Provider,{value:a},e.children)},s={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},i=n.forwardRef((function(e,a){var t=e.components,u=e.mdxType,l=e.originalType,m=e.parentName,y=r(e,["components","mdxType","originalType","parentName"]),i=o(t),d=u,c=i["".concat(m,".").concat(d)]||i[d]||s[d]||l;return t?n.createElement(c,p(p({ref:a},y),{},{components:t})):n.createElement(c,p({ref:a},y))}));function d(e,a){var t=arguments,u=a&&a.mdxType;if("string"==typeof e||u){var l=t.length,p=new Array(l);p[0]=i;var r={};for(var m in a)hasOwnProperty.call(a,m)&&(r[m]=a[m]);r.originalType=e,r.mdxType="string"==typeof e?e:u,p[1]=r;for(var o=2;o<l;o++)p[o]=t[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}i.displayName="MDXCreateElement"},8215:function(e,a,t){t.d(a,{Z:function(){return u}});var n=t(7294);function u(e){var a=e.children,t=e.hidden,u=e.className;return n.createElement("div",{role:"tabpanel",hidden:t,className:u},a)}},9877:function(e,a,t){t.d(a,{Z:function(){return y}});var n=t(7462),u=t(7294),l=t(2389),p=t(8801),r=t(6010),m="tabItem_LplD";function o(e){var a,t,l,o=e.lazy,y=e.block,s=e.defaultValue,i=e.values,d=e.groupId,c=e.className,k=u.Children.map(e.children,(function(e){if((0,u.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=i?i:k.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),v=(0,p.lx)(b,(function(e,a){return e.value===a.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var T=null===s?s:null!=(a=null!=s?s:null==(t=k.find((function(e){return e.props.default})))?void 0:t.props.value)?a:null==(l=k[0])?void 0:l.props.value;if(null!==T&&!b.some((function(e){return e.value===T})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+T+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,p.UB)(),N=g.tabGroupChoices,f=g.setTabGroupChoices,h=(0,u.useState)(T),x=h[0],I=h[1],Z=[],_=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var O=N[d];null!=O&&O!==x&&b.some((function(e){return e.value===O}))&&I(O)}var V=function(e){var a=e.currentTarget,t=Z.indexOf(a),n=b[t].value;n!==x&&(_(a),I(n),null!=d&&f(d,n))},w=function(e){var a,t=null;switch(e.key){case"ArrowRight":var n=Z.indexOf(e.currentTarget)+1;t=Z[n]||Z[0];break;case"ArrowLeft":var u=Z.indexOf(e.currentTarget)-1;t=Z[u]||Z[Z.length-1]}null==(a=t)||a.focus()};return u.createElement("div",{className:"tabs-container"},u.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":y},c)},b.map((function(e){var a=e.value,t=e.label,l=e.attributes;return u.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===a?0:-1,"aria-selected":x===a,key:a,ref:function(e){return Z.push(e)},onKeyDown:w,onFocus:V,onClick:V},l,{className:(0,r.Z)("tabs__item",m,null==l?void 0:l.className,{"tabs__item--active":x===a})}),null!=t?t:a)}))),o?(0,u.cloneElement)(k.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):u.createElement("div",{className:"margin-vert--md"},k.map((function(e,a){return(0,u.cloneElement)(e,{key:a,hidden:e.props.value!==x})}))))}function y(e){var a=(0,l.Z)();return u.createElement(o,(0,n.Z)({key:String(a)},e))}},740:function(e,a,t){t.r(a),t.d(a,{assets:function(){return i},contentTitle:function(){return y},default:function(){return k},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var n=t(7462),u=t(3366),l=(t(7294),t(3905)),p=t(9877),r=t(8215),m=["components"],o={title:"Numerical operations using numpy",sidebar_label:"numpy basics"},y=void 0,s={unversionedId:"numpy/numpy-basics",id:"numpy/numpy-basics",title:"Numerical operations using numpy",description:"Creating numpy array:",source:"@site/docs/numpy/numpy-basics.mdx",sourceDirName:"numpy",slug:"/numpy/numpy-basics",permalink:"/python-tutorial/numpy/numpy-basics",editUrl:"https://github.com/pranabdas/python-tutorial/blob/main/docs/numpy/numpy-basics.mdx",tags:[],version:"current",frontMatter:{title:"Numerical operations using numpy",sidebar_label:"numpy basics"},sidebar:"docs",previous:{title:"numpy",permalink:"/python-tutorial/category/numpy"},next:{title:"Linear algebra",permalink:"/python-tutorial/numpy/linear-algebra"}},i={},d=[],c={toc:d};function k(e){var a=e.components,t=(0,u.Z)(e,m);return(0,l.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Creating ",(0,l.kt)("inlineCode",{parentName:"p"},"numpy")," array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nmy_array = np.array([1, 3, 4])\nprint(my_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[1 3 4]\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"type(my_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"numpy.ndarray\n")))),(0,l.kt)("p",null,"Create a two-dimensional array/matrix:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2 = np.array([[1, 2, 4], [3, 1, 5]])\nprint(my_array2)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[1 2 4]\n [3 1 5]]\n")))),(0,l.kt)("p",null,"Check dimension of an array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2.ndim\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"2\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2.shape\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"(2, 3)\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2.size\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"6\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2.dtype\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"dtype('int64')\n")))),(0,l.kt)("p",null,"We can specify the dtype explicitly if you need to."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array3 = np.array([[1, 4, 7], [1, 9, 32]], dtype=np.float64)\nmy_array3.dtype\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"dtype('float64')\n")))),(0,l.kt)("p",null,"We can switch type of an existing array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array3.astype(np.int64)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[ 1,  4,  7],\n       [ 1,  9, 32]])\n")))),(0,l.kt)("p",null,"Alternative way:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array3 = np.array(my_array3, dtype=np.float64)\nprint(my_array3)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[ 1.  4.  7.]\n [ 1.  9. 32.]]\n")))),(0,l.kt)("p",null,"Creating zero matrices:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_zero_array = np.zeros((2, 3))\nprint(my_zero_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[0. 0. 0.]\n [0. 0. 0.]]\n")))),(0,l.kt)("p",null,"Matrix of ones:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_ones_array = np.ones((2, 3))\nprint(my_ones_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[1. 1. 1.]\n [1. 1. 1.]]\n")))),(0,l.kt)("p",null,"If we need to fill the matrix with some other constant, we can first create\nones_matrix and multiply. However there is another function to do the same."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_const_array = np.full([2, 3], 5)\nprint(my_const_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[5 5 5]\n [5 5 5]]\n")))),(0,l.kt)("p",null,"Create arrays with incremental sequences:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array4 = np.arange(1, 10, 2)\nprint(my_array4)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[1 3 5 7 9]\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array5 = np.linspace(1, 10, 10)\nprint(my_array5)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]\n")))),(0,l.kt)("p",null,"Create meshgrid:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"x = np.array([-1, 0, 1])\ny = np.array([-2, 0, 2])\n\nX, Y = np.meshgrid(x, y)\nprint(X, '\\n\\n', Y)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[-1  0  1]\n [-1  0  1]\n [-1  0  1]]\n\n [[-2 -2 -2]\n [ 0  0  0]\n [ 2  2  2]]\n")))),(0,l.kt)("p",null,"Other useful matrices:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.identity(4)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1., 0., 0., 0.],\n       [0., 1., 0., 0.],\n       [0., 0., 1., 0.],\n       [0., 0., 0., 1.]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.eye(4)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1., 0., 0., 0.],\n       [0., 1., 0., 0.],\n       [0., 0., 1., 0.],\n       [0., 0., 0., 1.]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.eye(4, k=1)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[0., 1., 0., 0.],\n       [0., 0., 1., 0.],\n       [0., 0., 0., 1.],\n       [0., 0., 0., 0.]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.eye(4, k=-1)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[0., 0., 0., 0.],\n       [1., 0., 0., 0.],\n       [0., 1., 0., 0.],\n       [0., 0., 1., 0.]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.diag(np.arange(0, 20, 5))\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[ 0,  0,  0,  0],\n       [ 0,  5,  0,  0],\n       [ 0,  0, 10,  0],\n       [ 0,  0,  0, 15]])\n")))),(0,l.kt)("p",null,"Create random matrix:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.random.rand(3)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([0.49067738, 0.79451961, 0.87339187])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.random.rand(2, 3)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[0.858099  , 0.86235168, 0.48305685],\n       [0.23118357, 0.87312982, 0.1940535 ]])\n")))),(0,l.kt)("p",null,"Normally distributed random numbers:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array_10 = np.random.randn(5); my_array_10\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([ 0.55956033, -0.37623696,  1.78995147,  0.05591339, -0.43796257])\n")))),(0,l.kt)("p",null,"Expand matrix with ",(0,l.kt)("inlineCode",{parentName:"p"},"numpy.tile()"),":"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array_11 = np.array([[1, 3], [2, 5]]); my_array_11\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1, 3],\n       [2, 5]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array_12 = np.tile(my_array_11, 2); my_array_12\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1, 3, 1, 3],\n       [2, 5, 2, 5]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array_12 = np.tile(my_array_11, (3, 2)); my_array_12\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1, 3, 1, 3],\n       [2, 5, 2, 5],\n       [1, 3, 1, 3],\n       [2, 5, 2, 5],\n       [1, 3, 1, 3],\n       [2, 5, 2, 5]])\n")))),(0,l.kt)("p",null,"Indexing and slicing matrix:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array = np.arange(5); my_array\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([0, 1, 2, 3, 4])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(my_array[0], my_array[-1])\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"0 4\n")))),(0,l.kt)("p",null,"Reversing an array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array[::-1]\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([4, 3, 2, 1, 0])\n")))),(0,l.kt)("p",null,"Indexing in higher dimensional array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array = np.array([[1, 3, 2], [1, 4, 2], [5, 3, 1]]); print(my_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[1 3 2]\n [1 4 2]\n [5 3 1]]\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array[2, 1]\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"3\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array[2, :]\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([5, 3, 1])\n")))),(0,l.kt)("p",null,"Masking/substituting array values based on criteria:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n\na = np.random.rand(10)\nprint(a)\n\n# sample output\n[0.80182435 0.94238444 0.42435805 0.03047743 0.20772764 0.63607548\n 0.17445815 0.32827581 0.5017025  0.33546651]\n\nb = np.array(a)  # make a deep copy\nb[a>0.5] = 1\nb[a<=0.5] = 0\n\nprint(b)\n\n# output\n[1. 1. 0. 0. 0. 1. 0. 0. 1. 0.]\n")))}k.isMDXComponent=!0}}]);