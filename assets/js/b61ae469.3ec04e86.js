"use strict";(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([[6077],{3033:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=t(5893),s=t(1151),a=t(4866),l=t(5162);const o={title:"Python multiprocessing",sidebar_label:"Multiprocessing"},i=void 0,u={id:"multiprocessing",title:"Python multiprocessing",description:"Most likely the computer you are reading this has multiple processor cores. So",source:"@site/docs/multiprocessing.mdx",sourceDirName:".",slug:"/multiprocessing",permalink:"/python-tutorial/multiprocessing",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/python-tutorial/blob/main/docs/multiprocessing.mdx",tags:[],version:"current",frontMatter:{title:"Python multiprocessing",sidebar_label:"Multiprocessing"},sidebar:"docs",previous:{title:"Pandas",permalink:"/python-tutorial/pandas"},next:{title:"SQL database",permalink:"/python-tutorial/sql-database"}},c={},p=[{value:"MPI for Python",id:"mpi-for-python",level:2},{value:"MPI Examples",id:"mpi-examples",level:3},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Most likely the computer you are reading this has multiple processor cores. So\nfar the python programs we have written, runs on a single processor. Often part\nof our code can be distributed in parallel to multiple processor and could be\nperformed simultaneously. Here we start with an example. First, with usual\nserial processing:"}),"\n",(0,r.jsxs)(a.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],children:[(0,r.jsx)(l.Z,{value:"input",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'import time\n\ndef sleep(sec):\n    time.sleep(sec)\n    return sec\n\nt0 = time.perf_counter()\n\nfor ii in range(5):\n    print(sleep(ii))\n\nt_final = time.perf_counter()\nprint("The program took", t_final - t0, "second(s).")\n'})})}),(0,r.jsx)(l.Z,{value:"output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"0\n1\n2\n3\n4\nThe program took 10.027701000000889 second(s).\n"})})})]}),"\n",(0,r.jsx)(n.p,{children:"With multiprocessing (I am allocating two cores for below examples):"}),"\n",(0,r.jsxs)(a.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],children:[(0,r.jsx)(l.Z,{value:"input",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'import concurrent.futures\n\nt0 = time.perf_counter()\n\nwith concurrent.futures.ProcessPoolExecutor() as executor:\n    results = [executor.submit(sleep, ii) for ii in range(5)]\n\n    for f in concurrent.futures.as_completed(results):\n        print(f.result())\n\nt_final = time.perf_counter()\nprint("The program took", t_final - t0, "second(s).")\n'})})}),(0,r.jsx)(l.Z,{value:"output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"0\n1\n2\n3\n4\nThe program took 6.067244100000607 second(s).\n"})})})]}),"\n",(0,r.jsx)(n.p,{children:"We can see the performance is almost doubled while using two cores in parallel.\nWe could collect the output in a list, or convert to an array as well:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"with concurrent.futures.ProcessPoolExecutor() as executor:\n    results = [executor.submit(sleep, ii) for ii in range(5)]\n\n    result_list = []\n    for f in concurrent.futures.as_completed(results):\n        result_list.append(f.result())\n\n# convert to array\nresult_array = np.array(result_list)\n# or\nresult_array = np.vstack(result_list)\n"})}),"\n",(0,r.jsx)(n.p,{children:"There is another alternative way of doing the multiprocessing:"}),"\n",(0,r.jsxs)(a.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],children:[(0,r.jsx)(l.Z,{value:"input",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'import multiprocessing\n\ndef sleep(sec, return_dict):\n    time.sleep(sec)\n    return_dict[sec] = sec\n\nt0 = time.perf_counter()\n\nif __name__ == "__main__":\n    manager = multiprocessing.Manager()\n    return_dict = manager.dict()\n    jobs = []\n    for i in range(5):\n        p = multiprocessing.Process(target=sleep, args=(i, return_dict))\n        jobs.append(p)\n        p.start()\n\n    for proc in jobs:\n        proc.join()\n\n    for key in range(5):\n        print(return_dict[key])\n\nt_final = time.perf_counter()\nprint("The program took", t_final - t0, "second(s).")\n'})})}),(0,r.jsx)(l.Z,{value:"output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"0\n1\n2\n3\n4\nThe program took 4.119128827000168 second(s).\n"})})})]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"We must have unique keys, if we want to collect the results in order. In some\ncases, that might not be necessary, e.g., batch processing of images."})}),"\n",(0,r.jsx)(n.h2,{id:"mpi-for-python",children:"MPI for Python"}),"\n",(0,r.jsx)(n.p,{children:"Installation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install mpi4py\n"})}),"\n",(0,r.jsx)(n.p,{children:"A python code can be run by:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mpirun -np 4 python3 code.py\n"})}),"\n",(0,r.jsx)(n.h3,{id:"mpi-examples",children:"MPI Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'import sys\nfrom mpi4py import MPI\n\ncomm = MPI.COMM_WORLD\nid = comm.Get_rank()\np = comm.Get_size()\n\nif (id == 0):\n    print("There are ", p, "MPI processes running.")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=fKl2JW_qrso",children:"https://www.youtube.com/watch?v=fKl2JW_qrso"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://mpi4py.readthedocs.io/",children:"https://mpi4py.readthedocs.io/"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5162:(e,n,t)=>{t.d(n,{Z:()=>l});t(7294);var r=t(6905);const s={tabItem:"tabItem_Ymn6"};var a=t(5893);function l(e){let{children:n,hidden:t,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,l),hidden:t,children:n})}},4866:(e,n,t)=>{t.d(n,{Z:()=>w});var r=t(7294),s=t(6905),a=t(2466),l=t(6550),o=t(469),i=t(1980),u=t(7392),c=t(12);function p(e){var n,t;return null!=(n=null==(t=r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function d(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,l.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,i._X)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,a=d(e),[l,i]=(0,r.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const s=null!=(n=r.find((e=>e.default)))?n:r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:a}))),[u,p]=m({queryString:t,groupId:s}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[s,a]=(0,c.Nk)(t);return[s,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:s}),g=(()=>{const e=null!=u?u:f;return h({value:e,tabValues:a})?e:null})();(0,o.Z)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error("Can't select invalid tab value="+e);i(e),p(e),b(e)}),[p,b,a]),tabValues:a}}var b=t(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(5893);function x(e){let{className:n,block:t,selectedValue:r,selectValue:l,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.o5)(),c=e=>{const n=e.currentTarget,t=i.indexOf(n),s=o[t].value;s!==r&&(u(n),l(s))},p=e=>{var n;let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var r;const n=i.indexOf(e.currentTarget)+1;t=null!=(r=i[n])?r:i[0];break}case"ArrowLeft":{var s;const n=i.indexOf(e.currentTarget)-1;t=null!=(s=i[n])?s:i[i.length-1];break}}null==(n=t)||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>i.push(e),onKeyDown:p,onClick:c,...a,className:(0,s.Z)("tabs__item",g.tabItem,null==a?void 0:a.className,{"tabs__item--active":r===n}),children:null!=t?t:n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function j(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,s.Z)("tabs-container",g.tabList),children:[(0,v.jsx)(x,{...e,...n}),(0,v.jsx)(y,{...e,...n})]})}function w(e){const n=(0,b.Z)();return(0,v.jsx)(j,{...e,children:p(e.children)},String(n))}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>l});var r=t(7294);const s={},a=r.createContext(s);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);