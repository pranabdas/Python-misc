"use strict";(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([[7509],{1858:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"basics/global-var","title":"Global variables","description":"The variables we declare inside a function are local to the function. It cannot","source":"@site/docs/basics/global-var.md","sourceDirName":"basics","slug":"/basics/global-var","permalink":"/python-tutorial/basics/global-var","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/python-tutorial/blob/main/docs/basics/global-var.md","tags":[],"version":"current","frontMatter":{"title":"Global variables"},"sidebar":"docs","previous":{"title":"Function","permalink":"/python-tutorial/basics/function"},"next":{"title":"Class","permalink":"/python-tutorial/basics/class"}}');var a=n(4848),s=n(8453);const r={title:"Global variables"},o=void 0,c={},l=[];function d(t){const e={code:"code",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["The variables we declare inside a function are local to the function. It cannot\nbe used by another function. However, a global variable once declared/set, it\ncan be accessed by other functions. Here is an example: we will write a program\n(equivalent of MATLAB ",(0,a.jsx)(e.code,{children:"tic"})," and ",(0,a.jsx)(e.code,{children:"toc"})," commands) that is combination of two\nfunctions: ",(0,a.jsx)(e.strong,{children:"tic"})," which starts the timer and ",(0,a.jsx)(e.strong,{children:"toc"})," which stops the timer and\nprints the time interval between calling ",(0,a.jsx)(e.code,{children:"tic"})," and ",(0,a.jsx)(e.code,{children:"toc"})," functions."]}),"\n",(0,a.jsx)(e.p,{children:"First let us write the tic program and set the current time as a global\nvariable:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"def tic():\n    import time\n\n    global tictoc_start_time\n    tictoc_start_time = time.time()\n\n    return\n"})}),"\n",(0,a.jsx)(e.p,{children:"toc program that prints the elapsed time:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'def toc():\n    import time\n\n    if "tictoc_start_time" in globals():\n        elapsed_time = time.time() - tictoc_start_time\n        print("Elapsed time =", elapsed_time, "sec.")\n    else:\n        print("First run the tic() program, start time is not set.")\n        elapsed_time = 0.0\n\n    return elapsed_time\n'})}),"\n",(0,a.jsx)(e.p,{children:"Of course, you should introduce global variables with care, as they might\nconflict with other parts of the program."})]})}function p(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(d,{...t})}):d(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>o});var i=n(6540);const a={},s=i.createContext(a);function r(t){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);